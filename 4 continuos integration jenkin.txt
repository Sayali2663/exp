what is continuos integration
Continuous integration is a DevOps software development practice where developers 
regularly merge their code changes into a central repository, after which automated
 builds and tests are run.

What is Maven?

Maven is a powerful project management tool that is based on POM (project object model).
 It is used for projects build, dependency and documentation. It simplifies the build 
  process    like    ANT.    But     it     is     too     much     advanced     than  
   ANT. In short terms we  can tell maven is a tool that can be used for building and 
managing any Java-based project. maven make the day-to-day work of Java developers easier
 and generally help with the comprehension of any Java-based project.

What maven does?

Maven does a lot of helpful task like
1.	We can easily build a project using maven.
2.	We can add jars and other dependencies of the project easily using the help of 
maven.
3.	Maven provides project information (log document, dependency list, unit test
 reports etc.)
4.	Maven is very helpful for a project while updating central repository of JARs 
and other dependencies.
5.	With the help of Maven we can build any number of projects into output types 
like the JAR, WAR etc without doing any scripting.
6.	Using maven we can easily integrate our project with source control system .

Maven Build Lifecycle 
The Maven build follows a specific lifecycle to deploy and distribute the target project.

There are three built-in lifecycles:

default: the main lifecycle, as it's responsible for project deployment
clean: to clean the project and remove all files generated by the previous build
site: to create the project's site documentation

Advantages of Maven
Helps manage all the processes, such as building, documentation, releasing, and distribution in project management
Simplifies the process of project building
Increases the performance of the project and the building process
The task of downloading Jar files and other dependencies is done automatically
Provides easy access to all the required information 

Core Concepts of Maven:

POM Files: Project Object Model(POM) Files are XML file that contains information 
related to the project and configuration information such as dependencies, source 
directory, plugin, goals etc. used by Maven to build the project. When you should 
execute a maven command you give maven a POM file to execute the commands. Maven reads 
pom.xml file to accomplish its configuration and operations.

Dependencies and Repositories: Dependencies are external Java libraries required for 
Project and repositories are directories of packaged JAR files. The local repository is
 just a directory on your machine hard drive. If the dependencies are not found in the 
local Maven repository, Maven downloads them from a central Maven repository and puts 
them in your local repository.

Build Life Cycles, Phases and Goals: A build life cycle consists of a sequence of
 build phases, and each build phase consists of a sequence of goals. Maven command is 
the name of a build lifecycle, phase or goal. If a lifecycle is requested executed by 
giving maven command, all build phases in that life cycle are executed also. If a build
 phase is requested executed, all build phases before it in the defined sequence are
 executed too.


jenkins installation:-
ubuntu ch 
browser mdhe jenkins download takaych nntr select karaych ubuntu debian
tya saglya commands copy krun paste karaycha terminal mdhe 
te zala ki browser la localhost:8080 takaych tikde ek password mangtil to pass sathi
tikdhcha path copy karaycha aani to terminal mdhe ek command takaychi 
sudo cat ani to path
tikde pass yeil to tkaycha browser cha window la  ani plugin install karayche

windows mdhe pn same browser mdhe jaych windows mdhe jaych mg download zalki next next
kraych

 
jenkins ubuntu mdhl delete krayla 

sudo apt purge jenkins kraych 
 
windows mdhl jenkins delete krayla control panel mdhe jaun kraych



actual processs of exp
for install maven=
go to dashboard
go to manage jenkins then manage plugin 
click on available and search maven integration click on download
reload browser 
go to manage jenkins
click global tool configuration
add jdk java cha path paste karaycha
or install automatically  oracle ne apply and save
click on new item on dash board maven build click on maven project click ok 
description takaych
source code management mdhe git sleect karaych
url takaycha github mdhla 
apply then save
click build now left side la ahe
build history mdhe #1 click karaych console .out click karaych




