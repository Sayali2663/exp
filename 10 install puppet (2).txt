Aim : To install and Configure Pull based Software Configuration Management and provisioning tools using Puppet.

Theory :

What is Configuration Management?

Configuration Management is the process of maintaining systems, such as computer 
hardware and software, in a desired state. Configuration Management (CM) is also a 
method of ensuring that systems perform in a manner consistent with expectations over time.

What is Puppet?
Puppet is a tool that helps you manage and automate the configuration of servers. When you use Puppet, 
you define the desired state of the systems in your infrastructure that you want to manage.
Puppet is specially designed to manage the configuration of Linux and Windows systems. It is
written in Ruby and uses its unique Domain Specific Language (DSL) to describe system
configuration.

What are the Puppet versions?

Puppet comes in two versions:

Open Source Puppet:
It is a basic version of Puppet configuration management tool, which is also known as Open Source Puppet.
It is available directly from Puppet’s website and is licensed under the Apache 2.0 system

Puppet Enterprise:
Commercial version that offers features like compliance reporting,orchestration, role-based access control, 
GUI, API, and command-line tools for effective management of nodes.

What are Functions of Puppet ?
Puppet allows you to define distinct configurations for every host.
The tool allows you to continuously monitor servers to confirm whether the required configuration exists or not and it is not altered. 
If the config is changed, Puppet tool will revert to the pre-defined configuration on the host.
It also provides control over all the configured system, so a centralized change gets automatically effected.
It is also used as a deployment tool as it automatically deploys software to the system. It implements the infrastructure as a
 code because policies and configurations are written as code.

Implementation and Output :

Installation of Puppet on Linux Step 1: Update Package List
Before you start the installation process, update the list of available packages:
sudo apt-get update –y

Step 2: Set Up Hostname Resolution
With Puppet, master and client nodes communicate using hostname. Before installing Puppet,
 you need to set up a unique hostname on each node.

Open the hosts file on each node by using:

sudo nano /etc/hosts

Paste the following lines at the end of each hosts file:
[puppet master ip] puppetmaster puppet [puppet client ip] puppetclient Where:
[puppet master ip] is the IP address of the master node, and
[puppet client ip] is the IP address of the client node.
Press Ctrl + X to close the file, and then type Y and press Enter to save the changes you made.

Step 3: Install Puppet Server on Master Node

Download the latest Puppet version on the master node:
Wget https://apt.puppetlabs.com/puppet7-release-focal.deb

Once the download is complete, install the package by using:
sudo dpkg -i puppet7-release-focal.deb

Update the package repository:
sudo apt-get update -y

Install the Puppet server with the following command
sudo apt-get install puppetserver –y

Open the puppetserver file by using:
sudo nano /etc/default/puppetserver

Press Ctrl + X to close the puppetserver file. TypeY and press Enter to save the changes you made.

Start the Puppet service and set it to launch on system boot by using:
sudo systemctl start puppetserver
sudo systemctl enable puppetserver

Check if the Puppet service is running with:
sudo systemctl status puppetserver

Step 4: Install Puppet Agent on Client Node

1. Download the latest version of Puppet on a client node:
wget https://apt.puppetlabs.com/puppet7-release-focal.deb

2 . Once the download is complete, install the package by using: 
sudo dpkg -i puppet6-release-focal.deb

Update the package repository one more time:
sudo apt-get update -y

Install the Puppet agent by using:
sudo apt -get install puppet-agent -y

Open the Puppet configuration file:
sudo nano /etc/puppetlabs/puppet/puppet.conf

Add the following lines to the end of the Puppet configuration file to define thePuppet master information:
[main]
certname =
puppetclient server =
puppetmaster

Press Ctrl + X to close the Puppet configuration file, then type Y and press Enter to save the changes.

Start the Puppet service and set it to launch on system boot by using:
sudo systemctl start puppet
sudo systemctl enable puppet

Check if the Puppet service is running with:
sudo systemctl status puppet

Step 5: Sign Puppet Agent Certificate

Using the Puppet master node, list all the available certificates:
 	sudo /opt/puppetlabs/bin/puppetserver ca list –all

Sign the certificates with:
sudo /opt/puppetlabs/bin/puppetserver ca sign –all

2. Use the following command to test the communication between the master and client nodes:
sudo /opt/puppetlabs/bin/puppet agent –test

Conclusion : Thus we have fully set up Puppet master and client nodes on linux. This configuration management 
tool will help us automate the management and configuration of our server infrastructure.


